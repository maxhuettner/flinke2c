/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.6/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
}

apply plugin: 'java'
apply plugin: 'application'

mainClassName = "Main"

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    mavenCentral()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    compile group: 'net.sourceforge.argparse4j', name: 'argparse4j', version: '0.8.1'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.4.0'
    compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation 'org.msgpack:jackson-dataformat-msgpack:0.9.3'

    def flinkVersion = '1.18.1'

    compileOnly "org.apache.flink:flink-java:${flinkVersion}"
    compileOnly "org.apache.flink:flink-clients:${flinkVersion}"
    compileOnly "org.apache.flink:flink-runtime:${flinkVersion}"
    compileOnly "org.apache.flink:flink-core:${flinkVersion}"
    compileOnly "org.apache.flink:flink-table-common:${flinkVersion}"

    compileOnly fileTree(dir: 'libs', include: [
            'flink-table-api-java-uber-*.jar',
            'flink-table-runtime-*.jar',
            'scala-*.jar',
            'my-flink-udfs.jar'
    ])

    def streamingJarCandidates = [
            '../flink/flink-streaming-java/target/flink-streaming-java-1.18-SNAPSHOT.jar',
            '../flink/build-target/lib/flink-streaming-java-1.18-SNAPSHOT.jar',
            '../../flink/flink-streaming-java/target/flink-streaming-java-1.18-SNAPSHOT.jar',
            '../../flink/build-target/lib/flink-streaming-java-1.18-SNAPSHOT.jar',
            '../../flink/lib/flink-streaming-java-1.18.1.jar'
    ]
    def patchedStreaming = streamingJarCandidates
            .collect { candidate -> file(candidate) }
            .find { candidate -> candidate.exists() }

    if (patchedStreaming != null) {
        compileOnly files(patchedStreaming)
    } else {
        println "Warning: Patched flink-streaming-java jar not found; serverless extension will be missing."
    }
}


jar {
    manifest {
        attributes(
        'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
        'Main-Class': 'Main'
        )
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    zip64=true
}

tasks.withType(Zip).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
